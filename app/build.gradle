apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.github.nigtime456.weather"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.debug
    }

    buildTypes {
        buildTypes.each {
            it.buildConfigField 'String', 'DARK_SKY_API_KEY', DarkSkyApiKey
        }
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    flavorDimensions 'default'
    productFlavors {
        mock {
            dimension = 'default'
            applicationIdSuffix = '.mock'
            signingConfig signingConfigs.debug
        }
        prod {
            dimension = 'default'
        }
    }

    androidExtensions {
        experimental = true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //SDK
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.72"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'

    //Fragments
    def fragment_version = "1.2.4"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    //Retrofit, network
    implementation 'com.squareup.retrofit2:retrofit:2.7.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.7.1'
    implementation("com.squareup.okhttp3:logging-interceptor:4.3.1")

    //Json parser
    implementation 'com.google.code.gson:gson:2.8.6'

    //Room database
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"

    //Flexible Adapter
    implementation 'eu.davidea:flexible-adapter:5.1.0'
    implementation 'eu.davidea:flexible-adapter-ui:1.0.0'

    //Constraint Layout
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    //Material widgets
    implementation 'com.google.android.material:material:1.3.0-alpha01'

    //Swipe layout
    implementation 'com.chauthai.swipereveallayout:swipe-reveal-layout:1.4.1'

    //Refresh Layout
    implementation 'com.scwang.smart:refresh-layout-kernel:2.0.1'
    implementation 'com.scwang.smart:refresh-header-classics:2.0.1'

    //Rx
    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    //Log
    implementation 'com.jakewharton.timber:timber:4.7.1'

    //Dagger
    def dagger_version = "2.27"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    //testing
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'

    androidTestImplementation "androidx.benchmark:benchmark-junit4:1.0.0"

    //  debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.2'
}
